<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:extendedControls="clr-namespace:DependencyProperties.Resources.ExtendedControls"
    mc:Ignorable="d">
    <Style TargetType="{x:Type extendedControls:ExtendedButton}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="Microsoft Sans Serif" />
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type extendedControls:ExtendedButton}">
                    <Border x:Name="border"
                            Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorType={x:Type extendedControls:ExtendedButton}}}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image x:Name="image"
                                   Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Stretch="Uniform"
                                   Margin="{Binding Path=ImageMargin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type extendedControls:ExtendedButton}}}" 
                                   Visibility="Collapsed"/>
                            <TextBlock x:Name="content"
                                       Grid.Column="1"
                                       Cursor="{Binding Path=Cursor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type extendedControls:ExtendedButton}}}"
                                       FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type extendedControls:ExtendedButton}}}"
                                       FontFamily="{Binding Path=FontFamily, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type extendedControls:ExtendedButton}}}"
                                       Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type extendedControls:ExtendedButton}}}"
                                       Background="{Binding Path=Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}}"
                                       HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type extendedControls:ExtendedButton}}}"
                                       VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type extendedControls:ExtendedButton}}}">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasForegroundColor" Value="False">
                            <Setter Property="Foreground" TargetName="content" Value="Black" />
                        </Trigger>
                        <Trigger Property="HasBackgroundColor" Value="False">
                            <Setter Property="Background" TargetName="border" Value="White" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasBackgroundHoverColor" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border"
                                    Value="{Binding Path=BackgroundHoverColor, RelativeSource={RelativeSource AncestorType={x:Type extendedControls:ExtendedButton}}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasForegroundHoverColor" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" TargetName="content"
                                    Value="{Binding Path=ForegroundHoverColor, RelativeSource={RelativeSource AncestorType={x:Type extendedControls:ExtendedButton}}}" />
                        </MultiTrigger>
                        <Trigger Property="HasImage" Value="True">
                            <Setter Property="Source" TargetName="image" Value="{Binding Path=Image, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type extendedControls:ExtendedButton}}}" />
                            <Setter Property="Visibility" TargetName="image" Value="Visible" />
                            <Setter Property="HorizontalAlignment" TargetName="content" Value="Left"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasImageHover" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Source" TargetName="image" Value="{Binding Path=ImageHover, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type extendedControls:ExtendedButton}}}" />
                            <Setter Property="Visibility" TargetName="image" Value="Visible" />
                            <Setter Property="HorizontalAlignment" TargetName="content" Value="Left"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="DarkSlateGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>