<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:extendedControls="clr-namespace:DependencyProperties.Resources.ExtendedControls"
    xmlns:math="http://hexinnovation.com/math"
    xmlns:converters="clr-namespace:DependencyProperties.Resources.Converters"
    mc:Ignorable="d">

    <converters:TrimmedVisibilityConverter x:Key="TrimmedVisibilityConverter" />

    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9" />

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <math:MathConverter x:Key="Math" />
                    </ControlTemplate.Resources>
                    <Border x:Name="templateRoot"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="true"
                            CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource Math}, ConverterParameter='x/2'}">
                        <Border x:Name="splitBorder" BorderThickness="0"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Right" Margin="0,4,4,0" SnapsToDevicePixels="true"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow"
                                  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                  Fill="{TemplateBinding Foreground}"
                                  HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="Transparent" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Border}" />
                            <Setter Property="Cursor" Value="Arrow"/>
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="TextMenuTemplate" TargetType="{x:Type extendedControls:ExtendedComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                  Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="1"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   MaxWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}">
                <Border x:Name="dropDownBorder" Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0,0,0,0" CornerRadius="10">
                    <Border.OpacityMask>
                        <VisualBrush>
                            <VisualBrush.Visual>
                                <Border Background="OrangeRed"
                                        SnapsToDevicePixels="True"
                                        CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType={x:Type Border}, AncestorLevel=1}, FallbackValue=10}"
                                        Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Border}, AncestorLevel=1}, FallbackValue=200}"
                                        Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Border}, AncestorLevel=1}, FallbackValue=500}" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Border.OpacityMask>
                    <ScrollViewer x:Name="DropDownScrollViewer" HorizontalScrollBarVisibility="Disabled">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top"
                                    Width="0">
                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2"
                          Grid.Column="0"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            <ContentPresenter Grid.Column="0" x:Name="contentPresenter"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              IsHitTestVisible="false" Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left" TargetName="opaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="TextMenuItemTemplate">
        <TextBlock x:Name="TextMenuItemTextBlock" Text="{Binding }">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Style.Triggers>
                        <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                        <DataTrigger Binding="{Binding IsDefault, FallbackValue=false}" Value="true">
                            <Setter Property="FontWeight" Value="Bold" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
    </DataTemplate>

    <Style x:Key="TextMenuItemContainerStyle" TargetType="{x:Type ComboBoxItem}"
           BasedOn="{StaticResource {x:Type ComboBoxItem}}">
        <Style.Resources>
            <converters:ComboBoxItemPositionToBorderThicknessConverter x:Key="BorderThicknessConverter" />
        </Style.Resources>
        <Setter Property="BorderThickness"
                Value="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource BorderThicknessConverter}}" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd"
                            SnapsToDevicePixels="true"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background"
                                    Value="{Binding BackgroundHoverColor, RelativeSource={RelativeSource AncestorType={x:Type extendedControls:ExtendedComboBox}}}" />
                            <Setter Property="Foreground"
                                    Value="{Binding ForegroundHoverColor, RelativeSource={RelativeSource AncestorType={x:Type extendedControls:ExtendedComboBox}}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="Cursor" Value="Arrow" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Content="{Binding }" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Margin" Value="5,0,3,0"/>
        <Setter Property="Visibility" Value="{Binding PlacementTarget, RelativeSource={RelativeSource Self}, Converter={StaticResource TrimmedVisibilityConverter}}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter Content="{TemplateBinding Content}">
                        <ContentPresenter.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </ContentPresenter.Resources>
                    </ContentPresenter>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type extendedControls:ExtendedComboBox}">
        <Setter Property="Template" Value="{StaticResource TextMenuTemplate}" />
        <Setter Property="ItemTemplate" Value="{StaticResource TextMenuItemTemplate}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource TextMenuItemContainerStyle}" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Foreground" Value="Orange" />
        <Setter Property="ForegroundHoverColor" Value="DarkSlateGray" />
        <Setter Property="Background" Value="DarkSlateGray" />
        <Setter Property="BackgroundHoverColor" Value="Orange" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ToolTip" Value="{Binding SelectedItem, RelativeSource={RelativeSource Self}}" />
    </Style>
</ResourceDictionary>